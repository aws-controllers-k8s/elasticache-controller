---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: cacheclusters.elasticache.services.k8s.aws
spec:
  group: elasticache.services.k8s.aws
  names:
    kind: CacheCluster
    listKind: CacheClusterList
    plural: cacheclusters
    singular: cachecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.engineVersion
      name: VERSION
      type: string
    - jsonPath: .status.cacheClusterStatus
      name: STATUS
      type: string
    - jsonPath: .status.configurationEndpoint.address
      name: ENDPOINT
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CacheCluster is the Schema for the CacheClusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              CacheClusterSpec defines the desired state of CacheCluster.

              Contains all of the attributes of a specific cluster.
            properties:
              authToken:
                description: |-
                  SecretKeyReference combines a k8s corev1.SecretReference with a
                  specific key within the referred-to Secret
                properties:
                  key:
                    description: Key is the key within the secret
                    type: string
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              autoMinorVersionUpgrade:
                type: boolean
              azMode:
                type: string
              cacheClusterID:
                type: string
              cacheNodeType:
                type: string
              cacheParameterGroupName:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              cacheParameterGroupRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              cacheSecurityGroupNames:
                items:
                  type: string
                type: array
              cacheSubnetGroupName:
                type: string
              cacheSubnetGroupRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              engine:
                type: string
              engineVersion:
                type: string
              ipDiscovery:
                type: string
              logDeliveryConfigurations:
                items:
                  description: Specifies the destination, format and type of the logs.
                  properties:
                    destinationDetails:
                      description: |-
                        Configuration details of either a CloudWatch Logs destination or Kinesis
                        Data Firehose destination.
                      properties:
                        cloudWatchLogsDetails:
                          description: The configuration details of the CloudWatch
                            Logs destination.
                          properties:
                            logGroup:
                              type: string
                          type: object
                        kinesisFirehoseDetails:
                          description: The configuration details of the Kinesis Data
                            Firehose destination.
                          properties:
                            deliveryStream:
                              type: string
                          type: object
                      type: object
                    destinationType:
                      type: string
                    enabled:
                      type: boolean
                    logFormat:
                      type: string
                    logType:
                      type: string
                  type: object
                type: array
              networkType:
                type: string
              notificationTopicARN:
                type: string
              notificationTopicRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              numCacheNodes:
                format: int64
                type: integer
              outpostMode:
                type: string
              port:
                format: int64
                type: integer
              preferredAvailabilityZone:
                type: string
              preferredAvailabilityZones:
                items:
                  type: string
                type: array
              preferredMaintenanceWindow:
                type: string
              preferredOutpostARN:
                type: string
              preferredOutpostARNs:
                items:
                  type: string
                type: array
              replicationGroupID:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              replicationGroupRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              securityGroupIDs:
                items:
                  type: string
                type: array
              snapshotARNs:
                items:
                  type: string
                type: array
              snapshotName:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              snapshotRef:
                description: "AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference\ntype to provide more user friendly syntax
                  for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t
                  \ name: my-api"
                properties:
                  from:
                    description: |-
                      AWSResourceReference provides all the values necessary to reference another
                      k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                type: object
              snapshotRetentionLimit:
                format: int64
                type: integer
              snapshotWindow:
                type: string
              tags:
                items:
                  description: |-
                    A tag that can be added to an ElastiCache cluster or replication group. Tags
                    are composed of a Key/Value pair. You can use tags to categorize and track
                    all your ElastiCache resources, with the exception of global replication
                    group. When you add or remove tags on replication groups, those actions will
                    be replicated to all nodes in the replication group. A tag with a null Value
                    is permitted.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              transitEncryptionEnabled:
                type: boolean
            required:
            - cacheClusterID
            type: object
          status:
            description: CacheClusterStatus defines the observed state of CacheCluster
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              atRestEncryptionEnabled:
                description: |-
                  A flag that enables encryption at-rest when set to true.

                  You cannot modify the value of AtRestEncryptionEnabled after the cluster
                  is created. To enable at-rest encryption on a cluster you must set AtRestEncryptionEnabled
                  to true when you create a cluster.

                  Required: Only available when creating a replication group in an Amazon VPC
                  using Redis OSS version 3.2.6, 4.x or later.

                  Default: false
                type: boolean
              authTokenEnabled:
                description: |-
                  A flag that enables using an AuthToken (password) when issuing Valkey or
                  Redis OSS commands.

                  Default: false
                type: boolean
              authTokenLastModifiedDate:
                description: The date the auth token was last modified
                format: date-time
                type: string
              cacheClusterCreateTime:
                description: The date and time when the cluster was created.
                format: date-time
                type: string
              cacheClusterStatus:
                description: |-
                  The current state of this cluster, one of the following values: available,
                  creating, deleted, deleting, incompatible-network, modifying, rebooting cluster
                  nodes, restore-failed, or snapshotting.
                type: string
              cacheNodes:
                description: A list of cache nodes that are members of the cluster.
                items:
                  description: |-
                    Represents an individual cache node within a cluster. Each cache node runs
                    its own instance of the cluster's protocol-compliant caching software - either
                    Memcached, Valkey or Redis OSS.

                    The following node types are supported by ElastiCache. Generally speaking,
                    the current generation types provide more memory and computational power
                    at lower cost when compared to their equivalent previous generation counterparts.

                      - General purpose: Current generation: M7g node types: cache.m7g.large,
                        cache.m7g.xlarge, cache.m7g.2xlarge, cache.m7g.4xlarge, cache.m7g.8xlarge,
                        cache.m7g.12xlarge, cache.m7g.16xlarge For region availability, see Supported
                        Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)
                        M6g node types (available only for Redis OSS engine version 5.0.6 onward
                        and for Memcached engine version 1.5.16 onward): cache.m6g.large, cache.m6g.xlarge,
                        cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge,
                        cache.m6g.16xlarge M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge,
                        cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types:
                        cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge
                        T4g node types (available only for Redis OSS engine version 5.0.6 onward
                        and Memcached engine version 1.5.16 onward): cache.t4g.micro, cache.t4g.small,
                        cache.t4g.medium T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium
                        T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous
                        generation: (not recommended. Existing clusters are still supported but
                        creation of new clusters is not supported for these types.) T1 node types:
                        cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large,
                        cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge,
                        cache.m3.2xlarge

                      - Compute optimized: Previous generation: (not recommended. Existing clusters
                        are still supported but creation of new clusters is not supported for
                        these types.) C1 node types: cache.c1.xlarge

                      - Memory optimized: Current generation: R7g node types: cache.r7g.large,
                        cache.r7g.xlarge, cache.r7g.2xlarge, cache.r7g.4xlarge, cache.r7g.8xlarge,
                        cache.r7g.12xlarge, cache.r7g.16xlarge For region availability, see Supported
                        Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)
                        R6g node types (available only for Redis OSS engine version 5.0.6 onward
                        and for Memcached engine version 1.5.16 onward): cache.r6g.large, cache.r6g.xlarge,
                        cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge,
                        cache.r6g.16xlarge R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge,
                        cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types:
                        cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge,
                        cache.r4.16xlarge Previous generation: (not recommended. Existing clusters
                        are still supported but creation of new clusters is not supported for
                        these types.) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge
                        R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge,
                        cache.r3.8xlarge

                    Additional node type info

                      - All current generation instance types are created in Amazon VPC by default.

                      - Valkey or Redis OSS append-only files (AOF) are not supported for T1
                        or T2 instances.

                      - Valkey or Redis OSS Multi-AZ with automatic failover is not supported
                        on T1 instances.

                      - The configuration variables appendonly and appendfsync are not supported
                        on Valkey, or on Redis OSS version 2.8.22 and later.
                  properties:
                    cacheNodeCreateTime:
                      format: date-time
                      type: string
                    cacheNodeID:
                      type: string
                    cacheNodeStatus:
                      type: string
                    customerAvailabilityZone:
                      type: string
                    customerOutpostARN:
                      type: string
                    endpoint:
                      description: |-
                        Represents the information required for client programs to connect to a cache
                        node. This value is read-only.
                      properties:
                        address:
                          type: string
                        port:
                          format: int64
                          type: integer
                      type: object
                    parameterGroupStatus:
                      type: string
                    sourceCacheNodeID:
                      type: string
                  type: object
                type: array
              cacheParameterGroup:
                description: Status of the cache parameter group.
                properties:
                  cacheNodeIDsToReboot:
                    items:
                      type: string
                    type: array
                  cacheParameterGroupName:
                    type: string
                  parameterApplyStatus:
                    type: string
                type: object
              cacheSecurityGroups:
                description: A list of cache security group elements, composed of
                  name and status sub-elements.
                items:
                  description: Represents a cluster's status within a particular cache
                    security group.
                  properties:
                    cacheSecurityGroupName:
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              clientDownloadLandingPage:
                description: |-
                  The URL of the web page where you can download the latest ElastiCache client
                  library.
                type: string
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              configurationEndpoint:
                description: |-
                  Represents a Memcached cluster endpoint which can be used by an application
                  to connect to any node in the cluster. The configuration endpoint will always
                  have .cfg in it.

                  Example: mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211
                properties:
                  address:
                    type: string
                  port:
                    format: int64
                    type: integer
                type: object
              notificationConfiguration:
                description: |-
                  Describes a notification topic and its status. Notification topics are used
                  for publishing ElastiCache events to subscribers using Amazon Simple Notification
                  Service (SNS).
                properties:
                  topicARN:
                    type: string
                  topicStatus:
                    type: string
                type: object
              pendingModifiedValues:
                description: |-
                  A group of settings that are applied to the cluster in the future, or that
                  are currently being applied.
                properties:
                  authTokenStatus:
                    type: string
                  cacheNodeIDsToRemove:
                    items:
                      type: string
                    type: array
                  cacheNodeType:
                    type: string
                  engineVersion:
                    type: string
                  numCacheNodes:
                    format: int64
                    type: integer
                  transitEncryptionEnabled:
                    type: boolean
                  transitEncryptionMode:
                    type: string
                type: object
              replicationGroupLogDeliveryEnabled:
                description: |-
                  A boolean value indicating whether log delivery is enabled for the replication
                  group.
                type: boolean
              securityGroups:
                description: A list of VPC Security Groups associated with the cluster.
                items:
                  description: Represents a single cache security group and its status.
                  properties:
                    securityGroupID:
                      type: string
                    status:
                      type: string
                  type: object
                type: array
              transitEncryptionMode:
                description: |-
                  A setting that allows you to migrate your clients to use in-transit encryption,
                  with no downtime.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
