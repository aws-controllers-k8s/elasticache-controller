tests:
  - name: "Cluster mode disabled replication group"
    description: "Cluster mode disabled replication group CRUD tests"
    scenarios:
      - name: "ReadOne=DNE"
        description: "Given that the resource doesn't exist, expect an error"
        given:
          desired_state: "replication_group/cr/rg_cmd_before_create.yaml"
          svc_api:
            - operation: DescribeReplicationGroupsWithContext
              error:
                code: ReplicationGroupNotFoundFault
                message: "ReplicationGroup rg-cmd not found"
        invoke: ReadOne # Unit under test. Possible values: Create | ReadOne | Update | Delete
        expect: # no explicit latest_state expectation; returned resource may be non-nil
          error: resource not found
      - name: "Create=InvalidInput"
        description: "Given one of the parameters is invalid, ko.Status shows a terminal condition"
        given:
          desired_state: "replication_group/cr/rg_cmd_invalid_before_create.yaml"
          svc_api:
            - operation: CreateReplicationGroupWithContext
              error:
                code: InvalidParameterValue
                message: "The number of replicas per node group must be within 0 and 5."
        invoke: Create
        expect:
          latest_state: "replication_group/cr/rg_cmd_invalid_create_attempted.yaml"
          error: resource is in terminal condition
      - name: "Create"
        description: "Create a new replication group; ensure ko.Status shows that this create has been initiated"
        given:
          desired_state: "replication_group/cr/rg_cmd_before_create.yaml"
          svc_api:
            - operation: CreateReplicationGroupWithContext
              output_fixture: "replication_group/create/rg_cmd_creating.json"
        invoke: Create
        expect:
          latest_state: "replication_group/cr/rg_cmd_create_initiated.yaml"
          error: nil
      - name: "ReadOne=NewlyCreated"
        description: "Given that the creation of this RG completes, ko.Status reflects that the RG is ready (e.g. ResourceSynced condition True)"
        given:
          desired_state: "replication_group/cr/rg_cmd_create_initiated.yaml" # RG is creating, but creating has not yet finished
          svc_api:
            - operation: DescribeReplicationGroupsWithContext
              output_fixture: "replication_group/read_one/rg_cmd_create_completed.json"
            - operation: ListAllowedNodeTypeModifications
              output_fixture: "allowed_node_types/read_many/rg_cmd_allowed_node_types.json"
            - operation: DescribeEventsWithContext
              output_fixture: "events/read_many/rg_cmd_events.json"
            - operation: DescribeCacheClustersWithContext
              output_fixture: "cache_clusters/read_many/rg_cmd_primary_cache_node.json"
            - operation: ListTagsForResourceWithContext
              output_fixture: "replication_group/read_one/tags.json"
        invoke: ReadOne
        expect:
          latest_state: "replication_group/cr/rg_cmd_create_completed_not_yet_latest.yaml"
          error: nil
      - name: "ReadOne=NoDiff"
        description: "Given desired state matches with server side resource data, ko.Status remain unchanged (resource is stable)"
        given: # fixture
          desired_state: "replication_group/cr/rg_cmd_create_completed.yaml"
          svc_api:
            - operation: DescribeReplicationGroupsWithContext
              output_fixture: "replication_group/read_one/rg_cmd_create_completed.json"
            - operation: ListAllowedNodeTypeModifications
              output_fixture: "allowed_node_types/read_many/rg_cmd_allowed_node_types.json"
            - operation: DescribeEventsWithContext
              output_fixture: "events/read_many/rg_cmd_events.json"
            - operation: DescribeCacheClustersWithContext
              output_fixture: "cache_clusters/read_many/rg_cmd_primary_cache_node.json"
            - operation: ListTagsForResourceWithContext
              output_fixture: "replication_group/read_one/tags.json"
        invoke: ReadOne
        expect:
          latest_state: "replication_group/cr/rg_cmd_create_completed_latest.yaml"
          error: nil
      - name: "Update=IncreaseReplicaCount"
        description: "Ensure a replica is added once a new config is provided"
        given:
          desired_state: "replication_group/cr/rg_cmd_before_increase_replica.yaml"
          latest_state: "replication_group/cr/rg_cmd_before_increase_replica_latest.yaml"
          svc_api:
            - operation: IncreaseReplicaCountWithContext
              output_fixture: "replication_group/update/rg_cmd_increase_replica_initiated.json"
        invoke: Update
        expect:
          latest_state: "replication_group/cr/rg_cmd_increase_replica_initiated.yaml"
          error: nil
      - name: "Update=ScaleUp"
        description: "Scale up replication group to larger instance type"
        given:
          desired_state: "replication_group/cr/rg_cmd_before_scale_up_desired.yaml"
          latest_state: "replication_group/cr/rg_cmd_before_scale_up_latest.yaml"
          svc_api:
            - operation: ModifyReplicationGroupWithContext
              output_fixture: "replication_group/update/rg_cmd_scale_up_initiated.json"
        invoke: Update
        expect:
          latest_state: "replication_group/cr/rg_cmd_scale_up_initiated.yaml"
          error: nil
      - name: "Update=UpgradeEngine"
        description: "Upgrade Redis engine version from 5.0.0 to a newer version"
        given:
          desired_state: "replication_group/cr/rg_cmd_before_engine_version_upgrade.yaml"
          latest_state: "replication_group/cr/rg_cmd_before_engine_version_upgrade_latest.yaml"
          svc_api:
            - operation: ModifyReplicationGroupWithContext
              output_fixture: "replication_group/update/rg_cmd_engine_upgrade_initiated.json"
            - operation: DescribeCacheClustersWithContext
              output_fixture: "cache_clusters/read_many/rg_cmd_primary_cache_node.json"
        invoke: Update
        expect:
          latest_state: "replication_group/cr/rg_cmd_engine_upgrade_initiated.yaml"
          error: nil
      - name: "DeleteInitiated"
        description: "Delete cluster mode-disabled RG. RG moves from available to deleting state."
        given:
          desired_state: "replication_group/cr/rg_cmd_create_completed.yaml"
          svc_api:
            - operation: DeleteReplicationGroupWithContext
              output_fixture: "replication_group/delete/rg_cmd_delete_initiated.json"
            - operation: DescribeReplicationGroupsWithContext
              output_fixture: "replication_group/read_one/rg_cmd_delete_initiated.json"
        invoke: Delete
        expect:
          error: "Delete is in progress."
      - name: "Deleting"
        description: "Delete cluster mode-disabled RG. Retry scenario, RG is in deleting state."
        given:
          desired_state: "replication_group/cr/rg_cmd_delete_initiated.yaml"
          svc_api:
        invoke: Delete
        expect:
          error: "Delete is in progress."
  - name: Cluster mode enabled replication group
    description: Cluster mode enabled replication group CRUD tests
    scenarios:
      - name: "Create=CustomShardConfig"
        description: Create CME RG with custom node group configuration
        given:
          desired_state: "replication_group/cr/rg_cme_before_create.yaml"
          svc_api:
            - operation: CreateReplicationGroupWithContext
              output_fixture: "replication_group/create/rg_cme_creating.json"
        invoke: Create
        expect:
          latest_state: "replication_group/cr/rg_cme_create_initiated.yaml"
          error: nil
      - name: "Update=ShardConfigMismatch"
        description: Increasing NumNodeGroups without changing NodeGroupConfiguration should result in a terminal condition
        given:
          desired_state: "replication_group/cr/rg_cme_shard_mismatch.yaml"
          latest_state: "replication_group/cr/rg_cme_shard_mismatch.yaml"
          svc_api:
            - operation: ModifyReplicationGroupShardConfigurationWithContext
              error:
                code: InvalidParameterValue
                message: Configuration for all the node groups should be provided.
        invoke: Update
        expect:
          latest_state: "replication_group/cr/rg_cme_invalid_scale_out_attempted.yaml"
          error: resource is in terminal condition
